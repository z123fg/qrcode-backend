{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:4000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "JWT for containing user info"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/event/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "pagination offset"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "pagination limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Event fetched",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Event fetched!"
                },
                "result": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "619c7c4879c22be0ffb92e26"
                      },
                      "from": {
                        "type": "string",
                        "example": "2021-11-23T04:12:12.923Z"
                      },
                      "to": {
                        "type": "string",
                        "example": "2021-11-23T04:12:30.327Z"
                      },
                      "content": {
                        "type": "string",
                        "example": "go to bed!!!!!??"
                      },
                      "isCompleted": {
                        "type": "boolean",
                        "example": false
                      },
                      "creator": {
                        "type": "string",
                        "example": "619c68e8101cae55f5efc1a3"
                      },
                      "__v": {
                        "type": "string",
                        "example": "0"
                      }
                    }
                  }
                },
                "maxCount": {
                  "type": "string",
                  "example": "2"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "failed to fetch event",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You are not authenticated: JsonWebTokenError: invalid token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "example": "2021-11-23T19:25:19.178Z"
                },
                "to": {
                  "type": "string",
                  "example": "2021-11-23T19:25:19.178Z"
                },
                "content": {
                  "type": "string",
                  "example": "eat breakfast"
                }
              }
            },
            "description": "New event"
          }
        ],
        "responses": {
          "201": {
            "description": "event created",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "event created successfully!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "example": "2021-11-23T04:12:12.923Z"
                    },
                    "to": {
                      "type": "string",
                      "example": "2021-11-23T04:12:30.327Z"
                    },
                    "content": {
                      "type": "string",
                      "example": "go to bed!!!!!"
                    },
                    "isCompleted": {
                      "type": "boolean",
                      "example": false
                    },
                    "creator": {
                      "type": "string",
                      "example": "619c68e8101cae55f5efc1a3"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    },
                    "id": {
                      "type": "string",
                      "example": "619d634172c81b93c4838353"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "failed to create event",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You are not authenticated: JsonWebTokenError: invalid token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/event/{id}": {
      "put": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "target event id"
          },
          {
            "name": "event",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "example": "2021-11-23T19:25:19.178Z"
                },
                "to": {
                  "type": "string",
                  "example": "2021-11-23T19:25:19.178Z"
                },
                "content": {
                  "type": "string",
                  "example": "eat lunch"
                },
                "creator": {
                  "type": "string",
                  "example": "619c7c4079c22be0ffb92e24"
                }
              }
            },
            "description": "New event"
          }
        ],
        "responses": {
          "200": {
            "description": "update successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "update successfully!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Couldn't update post",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Couldn't update post: MongoServerError: Performing an update on the path '_id' would modify the immutable field '_id'"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "target event id"
          }
        ],
        "responses": {
          "200": {
            "description": "delete successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "delete successfully!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "failed to delete",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Failed to delete!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "failed to delete",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "You are not authenticated: JsonWebTokenError: invalid token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/signup": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "New user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "funnycat"
                },
                "password": {
                  "type": "string",
                  "example": "123123"
                },
                "isAdmin": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "description": "New user info"
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User created!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "funnycat"
                    },
                    "role": {
                      "type": "array",
                      "example": [
                        "user"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "_id": {
                      "type": "string",
                      "example": "619d5c0882043dfe3d855f0a"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "username is not unique",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid authentication credentials: ValidationError: username: Error, expected `username` to be unique. Value: `z123fg`"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "New user",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "funnycat"
                },
                "password": {
                  "type": "string",
                  "example": "123123"
                }
              }
            },
            "description": "User Login info"
          }
        ],
        "responses": {
          "200": {
            "description": "login successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "login successfully!"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "lastLogin": {
                      "type": "string",
                      "example": "2021-11-23T05:27:00.405Z"
                    },
                    "username": {
                      "type": "string",
                      "example": "z123fg"
                    },
                    "role": {
                      "type": "array",
                      "example": [
                        "user",
                        "admin"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InoxMjNmZyIsInVzZXJJZCI6IjYxOWM2OGU4MTAxY2FlNTVmNWVmYzFhMyIsInJvbGUiOlsidXNlciIsImFkbWluIl0sImlhdCI6MTYzNzY0NTIyMCwiZXhwIjoxNjM3NjQ4ODIwfQ.83WUPtx3H7REAQUTLem_WqVhQfhs0k3C3Gi1FPtkaYo"
                    },
                    "expiresIn": {
                      "type": "number",
                      "example": 3600
                    },
                    "userId": {
                      "type": "string",
                      "example": "619c68e8101cae55f5efc1a3"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Invalid password",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid password!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Username doesn't exist",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Username doesn't exist!"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {}
}